name: TESTES_CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

env:
  JSON_SECRET : ${{ secrets.JSON_SECRET }}
  TZ : America/Sao_Paulo
  DB_NAME : med_planner_db
  DB_USER : api_user
  DB_PWD : api_pass
  DB_HOST : postgres-med-planner
  DB_PORT : 5432
  DB_DIALECT : postgres
  DB_TIMEZONE : America/Sao_Paulo
  DB_TEST_NAME : med_planner_db_test
  DB_TEST_USER : api_user_test
  DB_TEST_PWD : api_pass_test
  DB_TEST_HOST : localhost
  DB_TEST_PORT : 5432
  DB_TEST_DIALECT : postgres
  DB_TEST_TIMEZONE : America/Sao_Paulo

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.17.0

    - name: Create .env
      run: touch ./backend-rest/.env

    - name: Set environment variables
      working-directory: ./backend-rest
      run: |
        echo "JSON_SECRET=${{ secrets.JSON_SECRET }}" >> .env
        echo "TZ=America/Sao_Paulo" >> .env
        echo "DB_NAME=med_planner_db" >> .env
        echo "DB_USER=api_user" >> .env
        echo "DB_PWD=api_pass" >> .env
        echo "DB_HOST=postgres-med-planner" >> .env
        echo "DB_PORT=5432" >> .env
        echo "DB_DIALECT=postgres" >> .env
        echo "DB_TIMEZONE=America/Sao_Paulo" >> .env
        echo "DB_TEST_NAME=med_planner_db_test" >> .env
        echo "DB_TEST_USER=api_user_test" >> .env
        echo "DB_TEST_PWD=api_pass_test" >> .env
        echo "DB_TEST_HOST=localhost" >> .env
        echo "DB_TEST_PORT=5432" >> .env
        echo "DB_TEST_DIALECT=postgres" >> .env
        echo "DB_TEST_TIMEZONE=America/Sao_Paulo" >> .env
        echo "TZ=America/Sao_Paulo" >> .env

    - name: Build Database Container
      run: docker compose build test-postgres-med-planner

    - name: Create Database Container
      run: docker compose up test-postgres-med-planner -d

    - name: Wait for Database to Start
      run: sleep 8

    - name: Install dependencies in backend-rest
      working-directory: ./backend-rest
      run: npm install

    - name: Run Tests in backend-rest
      working-directory: ./backend-rest
      run: npm run test

    - name: Stop and Remove Containers
      run: docker compose down
